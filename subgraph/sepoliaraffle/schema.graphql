type CallbackGasLimitUpdated @entity(immutable: true) {
  id: Bytes!
  oldLimit: BigInt! # uint32
  newLimit: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CoordinatorSet @entity(immutable: true) {
  id: Bytes!
  vrfCoordinator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NFTReturned @entity(immutable: true) {
  id: Bytes!
  raffleId: BigInt! # uint256
  owner: Bytes! # address
  nftAddress: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferRequested @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PlatformFeeReceived @entity(immutable: true) {
  id: Bytes!
  raffleId: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RaffleCancelled @entity(immutable: true) {
  id: Bytes!
  raffleId: BigInt! # uint256
  reason: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RaffleCreated @entity(immutable: true) {
  id: Bytes!
  raffleId: BigInt! # uint256
  owner: Bytes! # address
  nftAddress: Bytes! # address
  tokenId: BigInt! # uint256
  ticketCount: BigInt! # uint256
  endTime: BigInt! # uint256
  minTickets: BigInt! # uint256
  ticketPrice: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RandomWordsRequested @entity(immutable: true) {
  id: Bytes!
  raffleId: BigInt! # uint256
  requestId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RequestFulfilled @entity(immutable: true) {
  id: Bytes!
  requestId: BigInt! # uint256
  randomWords: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RequestSent @entity(immutable: true) {
  id: Bytes!
  requestId: BigInt! # uint256
  numWords: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TicketPurchased @entity(immutable: true) {
  id: Bytes!
  raffleId: BigInt! # uint256
  buyer: Bytes! # address
  numberOfTickets: BigInt! # uint256
  totalPaid: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TicketsRefunded @entity(immutable: true) {
  id: Bytes!
  raffleId: BigInt! # uint256
  participant: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type WinnerSelected @entity(immutable: true) {
  id: Bytes!
  raffleId: BigInt! # uint256
  winner: Bytes! # address
  prize: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
